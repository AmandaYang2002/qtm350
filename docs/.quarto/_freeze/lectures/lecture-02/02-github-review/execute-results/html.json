{
  "hash": "9e464284d8c2d8dadabda820e717a765",
  "result": {
    "engine": "jupyter",
    "markdown": "---\ntitle: GitHub Review\nsubtitle: Further details on GitHub and Anaconda\ndate: 2024-09-04\ndate-format: \"DD MMMM, YYYY\"\nauthor:\n  - name: Danilo Freire\n    email: danilo.freire@emory.edu\n    affiliations: Department of Quantitative Theory and Methods <br> Emory University\nformat:\n  clean-revealjs:\n    self-contained: true\n    footer: \"[GitHub Review](https://danilofreire.github.io/qtm151/lectures/lecture-02/02-github-review.html)\"\ntransition: slide\ntransition-speed: default\nscrollable: true\nengine: jupyter\neditor:\n  render-on-save: true\n---\n\n\n\n\n# Lecture Overview {background-color=\"#2d4563\"}\n\n## Learning Objectives\n### By the end of this lecture, you will be able to:\n\n<br>\n\n1. Understand the difference between cloning and forking a repository​\n2. Learn how to remove cloned repos​\n3. Understand the GitHub workflow: change, commit, push, fetch, pull​\n4. Learn how to keep a forked repository updated​\n5. Understand what a virtual environment in Anaconda is and how to create one if needed​\n\n## Software Installation\n### What we will use in this course\n\n::: {style=\"font-size: 26px;\"}\n- First, please remember to create a GitHub account if you do not have one yet: <https://education.github.com/pack>. Use your Emory email address to get the GitHub Student Developer Pack for free. Then install the following software:\n\n- [Anaconda](https://www.anaconda.com/products/individual) (Python distribution)\n- [GitHub Desktop](https://desktop.github.com/) (Git user interface)\n- [Visual Studio Code](https://code.visualstudio.com/) (Code editor)\n\n- Also, please check the tutorials on the course repository: <https://github.com/danilofreire/qtm151/tutorials>. They will help you with the installation and setup of the software. \n- If you have any questions, please let us know!\n:::\n\n# GitHub Review {background-color=\"#2d4563\"}\n\n## How to access and edit a remote repository\n\n<br>\n\n- [Access]{.alert}: download a remote GitHub repository to your local computer to work on it​\n- [Edit]{.alert}: make local changes to the repository and update them to the cloud​\n\nThere are two ways to access a repository:​\n\n- Cloning ​\n- Forking - We will use forking in this course​\n\n## Cloning\n\n:::: {.columns}\n::: {.column width=50%}\n- Makes a [local copy]{.alert} of a repository\n- Think of it as [downloading a repository]{.alert} onto your local computer\n- Unlike forks, [clones reference the original repository]{.alert}: you cannot push changes to it unless you have permissions from the owner\n- If you do have permissions, you can [overwrite]{.alert} the content of the remote repository\n:::\n\n::: {.column width=50%}\n![](figures/cloning.png)\n:::\n::::\n\n## Cloning example\n\n:::: {.columns}\n::: {.column width=50%}\n::: {style=\"font-size: 27px;\"}\n- Example repo: <https://github.com/danilofreire/qtm151-example-repository>\n\n- We can clone the repo using GitHub desktop\n  - It [does not create a remote copy]{.alert} of the repo in my GitHub page​\n\n- If the users cloning the repo have [write access]{.alert} they can replace files and folders in the remote GitHub repo​\n\n- The purpose of cloning is often to [contribute directly to the original repo]{.alert}​ or [work offline]{.alert}\n:::\n:::\n\n::: {.column width=50%}\n![](figures/cloning-page.png)\n:::\n::::\n\n## Cloning example\n\n![](figures/cloning01.png)\n\n## Cloning example\n\n![](figures/cloning02.png)\n\n## Cloning example: GitHub Desktop\n\n:::: {.columns}\n::: {.column width=50%}\n![](figures/cloning-desktop01.png){width=\"80%\"}\n:::\n\n::: {.column width=50%}\n![](figures/cloning-desktop02.png){width=\"90%\"}\n:::\n::::\n\n![](figures/cloning-desktop03.png){width=\"60%\"}\n\n# Questions about cloning? {background-color=\"#2d4563\"}\n\n## Forking\n\n<br>\n\n- Creates [your own copy]{.alert} of a repository in your remote GitHub page​\n\n- Your own copy means that you will be able to [contribute changes to your copy of the repository without affecting the original repository!​]{.alert}\n\n- Often used to [create a personal version of a project for custom modifications]{.alert}\n  - You can then [submit a pull request]{.alert} to the original repository to suggest changes​\n\n## Forking\n\n![](figures/forking.png)\n\n## Forking example\n\n:::: {.columns}\n::: {.column width=50%}\n::: {style=\"font-size: 27px;\"}\n- Example repo: <https://github.com/danilofreire/qtm151-example-repository>\n- We can fork the repo using the GitHub page\n  - It creates a remote copy of the repo on your GitHub\n  - You can then clone the repo to your local computer and work on it\n  - You can push changes to your remote repo\n  - See the [GitHub Tutorial](https://github.com/danilofreire/qtm151/blob/main/tutorials/03-github-tutorial.pdf) for more details\n:::\n:::\n\n::: {.column width=50%}\n![](figures/forking-page.png)\n:::\n::::\n\n## In our course\n\n![](figures/forking02.png)\n\n## In our course\n\n![](figures/forking03.png)\n\n## In our course\n\n![](figures/forking04.png)\n\n## Comparing cloning and forking\n\n<br>\n\n| Feature                | Cloning                                         | Forking                                        |\n|------------------------|-------------------------------------------------|------------------------------------------------|\n| **Local Copy**         | Yes                                             | No (initially only on GitHub)                  |\n| **Direct Collaboration** | Yes (if permissions allow)                     | No (requires pull requests)                    |\n| **Synchronisation**    | Yes (with the original repository)              | Yes (can fetch updates from the original)      |\n| **Control**            | Limited (depends on permissions)                | Full (over the forked copy)                    |\n| **Use Case**           | Contributing directly, local development        | Independent development, contributing via PRs  |\n| **Includes**           | All files, branches, commit history             | All files, commit history, but no issues or PRs|\n\n## Removing cloned and forked repositories\n\n<br>\n\n- If you cloned or forked a repository and no longer need it, [you can delete the local copy​]{.alert}\n- Deleting the local copy [does not affect the remote repository​]{.alert}\n- You can also delete the remote repository if you have write access to it​ ([be careful!]{.alert})\n\n# Questions about forking? {background-color=\"#2d4563\"}\n\n# Great! Now let us see what Jupyter Notebooks are! {background-color=\"#2d4563\"}\n\n",
    "supporting": [
      "02-github-review_files"
    ],
    "filters": [],
    "includes": {}
  }
}