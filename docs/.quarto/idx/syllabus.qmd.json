{"title":"QTM 350 - Data Science Computing","markdown":{"yaml":{"title":"QTM 350 - Data Science Computing"},"headingText":"Course Description","containsRefs":false,"markdown":"\n\n\nWelcome to [QTM 350](https://github.com/danilofreire/qtm350)! This course introduces key tools in modern data science, focusing on three essential aspects: reliability, reproducibility, and robustness. We will cover command line interfaces and [vim](https://www.vim.org/), version control with [Git](https://git-scm.com/) and [GitHub](https://github.com/), and literate programming using [Quarto](https://quarto.org/) and [Jupyter Notebooks](https://jupyter.org/). You will also learn about data storage and manipulation with [SQL](https://www.w3schools.com/sql/) and [Pandas](https://pandas.pydata.org/), data visualisation using [Matplotlib](https://matplotlib.org/), [Seaborn](https://seaborn.pydata.org/) and [plotnine](https://plotnine.readthedocs.io/), and parallel computing with [Dask](https://www.dask.org/). We will explore artificial intelligence-assisted programming with [GitHub Copilot](https://github.com/features/copilot) and finish with [Docker](https://www.docker.com/) and containerisation. Throughout the course, you will learn how to use these tools to improve your data science workflow and create more reliable, reproducible, and robust analyses.\n\nBy working with real-world datasets and problems, students will gain hands-on experience using these tools and methods to extract insights from data. This course will develop technical skills and critical thinking needed to solve complex data challenges. Upon completion, students will be prepared to confidently apply these tools to their own research and professional work.\n\n# Learning Objectives\n\nBy the end of this course, students will be able to:\n\n- Use data science tools for project collaboration and version control\n- Apply advanced techniques for data storage, manipulation, and querying\n- Create clear data visualisations and write well-documented code\n- Use AI tools to help with programming tasks\n- Understand the basics of containerisation and parallel computing\n \n# Course Requirements\n\nSome knowledge of programming is recommended, and familiarity with basic data manipulation and visualisation techniques is helpful. However, no prior experience with the tools covered in the course is required.\n\nIn terms of software, you will need to install the following tools: [Anaconda distribution of Python 3.x](https://www.anaconda.com/), [VS Code](https://code.visualstudio.com/), [PostgreSQL](https://www.postgresql.org/), [GitHub Desktop](https://github.com/apps/desktop), [Git](https://git-scm.com/), [Docker](https://www.docker.com/), [Quarto](https://quarto.org/), [Dask](https://dask.org/), [GitHub Copilot](https://copilot.github.com/).\n\nPlease feel free to reach out if you have any questions about the course content or your readiness to take the class.\n\n# Materials\n\nThis course is designed to be self-contained, providing all the necessary resources and materials to succeed in mastering the core concepts. However, students are encouraged to explore the following suggested books and online courses to deepen their understanding of the topics covered in the course.\n\n## Suggested Books\n\n- [Python for Data Analysis](https://wesmckinney.com/book/) by Wes McKinney\n- [Elements of Data Science](https://allendowney.github.io/ElementsOfDataScience/README.html) by Allen Downey\n- [SQL for Data Scientists](https://sqlfordatascientists.com/) by Renee M. P. Teate\n- [Data Science on the Command Line](https://www.datascienceatthecommandline.com/) by Jeroen Janssens\n- [Docker for Data Science](https://www.oreilly.com/library/view/docker-for-data/9781484230121/) by Joshua Cook\n- [Pro Git](https://git-scm.com/book/en/v2) by Scott Chacon and Ben Straub\n- [Free programming books](https://github.com/EbookFoundation/free-programming-books)\n\n### Online Courses\n\n- [Coursera: Python for Everybody Specialisation](https://www.coursera.org/specializations/python)\n- [edX: Python Basics for Data Science](https://www.edx.org/learn/python/ibm-python-basics-for-data-science)\n- [Codecademy: Learn Python](https://www.codecademy.com/learn/learn-python-3)\n- [DataCamp: Introduction to SQL](https://www.datacamp.com/courses/intro-to-sql-for-data-science)\n- [Coursera: SQL for Data Science](https://www.coursera.org/learn/sql-for-data-science)\n- [Coursera: Introduction to Git and GitHub](https://www.classcentral.com/course/introduction-git-github-18060)\n- [Microsoft Learn: GitHub Copilot Fundamentals](https://learn.microsoft.com/en-us/training/paths/copilot/)\n\n### Documentation\n\n- [Official Python Documentation](https://docs.python.org/3/)\n- [NumPy Documentation](https://numpy.org/doc/)\n- [Pandas Documentation](https://pandas.pydata.org/docs/)\n- [Matplotlib Documentation](https://matplotlib.org/stable/contents.html)\n- [PostgreSQL Documentation](https://www.postgresql.org/docs/)\n- [Git Documentation](https://git-scm.com/doc)\n- [GitHub Documentation](https://docs.github.com/en)\n- [Dask Documentation](https://docs.dask.org/en/latest/)\n- [GitHub Co-Pilot Documentation](https://copilot.github.com/)\n- [Docker Documentation](https://docs.docker.com/)\n\n# Course Information\n\nWe will meet every Monday and Wednesday from 14:30 to 15:45 at [XXXXX](https://quantitative.emory.edu). It is important that you read the materials before class. All information about the course is available on the course's GitHub repository at <https://github.com/danilofreire/qtm350>. While I will try to adhere to the course schedule as much as possible, I also want to adapt to your learning pace and style. The syllabus and course plan may change in the semester. Again, please check [the course repository](https://github.com/danilofreire/qtm350) regularly to check for updates. I will also announce any changes in class and via email.\n\n# Software\n\nWe will mainly use [Python](https://www.python.org) in this course. Python is a free, versatile, and powerful programming language that is widely used in data science, machine learning, and scientific computing. I recommend using the [Anaconda distribution](https://www.anaconda.com/products/individual) as it comes with many necessary Python libraries for data analysis, such as [Pandas](https://pandas.pydata.org/), [NumPy](https://numpy.org/), and [Jupyter](https://jupyter.org/). \n\nYou can write your Python code in any text editor, but I recommend [VS Code](https://code.visualstudio.com/) with the [Python extension](https://marketplace.visualstudio.com/items?itemName=ms-python.python). [Pycharm](https://www.jetbrains.com/pycharm/) is also well-regarded by developers. If you are feeling adventurous, you can also use [Neovim](https://neovim.io/) with the [coc-pyright](https://github.com/fannheyward/coc-pyright) plugin. That is, if [you can exit the editor](https://stackoverflow.blog/2017/05/23/stack-overflow-helping-one-million-developers-exit-vim/). :)\n\nWe will use [PostgreSQL](https://www.postgresql.org/) for database management. You can download PostgreSQL from the [official website](https://www.postgresql.org/). Please also install [pgAdmin](https://www.pgadmin.org/) and the [VS Code extension](https://marketplace.visualstudio.com/items?itemName=ckolkman.vscode-postgres) for PostgreSQL to interact with the database.\n\nWe will also use [Jupyter Notebooks](https://jupyter.org/) and [Quarto](https://quarto.org) in class. Jupyter itself comes pre-installed with Anaconda, but please install the [Jupyter extension for VS Code](https://marketplace.visualstudio.com/items?itemName=ms-toolsai.jupyter&ssr=false) as well. To install Quarto, please follow the instructions on the [official website](https://quarto.org). We will have a hands-on session to learn how to use both of them effectively.\n\nPlease also install [Docker](https://www.docker.com/) to work with containers. Docker is a platform for developing, shipping, and running applications in containers. Containers allow you to package your application and its dependencies together into a single unit. This makes it easy to ensure that your application will run on any other machine, regardless of any custom settings that machine might have that could differ from the machine that was used for writing and testing the code.\n\nFinally, we will use [GitHub](https://github.com) for version control. Please create a free account on GitHub and install [GitHub Desktop](https://desktop.github.com/) to manage your repositories. We will also use [Git](https://git-scm.com/) in the course. Git is a distributed version control system that allows you to track changes in your codebase and collaborate with others. You can install Git from the [official website](https://git-scm.com/).\n\nTo help you get started, I have prepared [a series of tutorials](https://github.com/danilofreire/qtm350/tree/main/tutorials) on how to install Anaconda, Jupyter, PostgreSQL, VS Code, GitHub Copilot, and open a free educational account on GitHub. Please follow these tutorials as soon as possible to ensure that you have all the necessary tools for the course.\n\n# Office Hours\n\nI am very flexible with office hours, but it is easier to contact me via email. Feel free to send me a message any time at [danilo.freire@emory.edu](mailto:danilo.freire@emory.edu), and I will likely reply within a few hours. If you prefer, you can meet me in the afternoon at my office. I am in the [Department of Quantitative Theory and Methods](https://qtm.emory.edu) almost every weekday. My office address is in the [Psychology and Interdisciplinary Sciences Building, 36 Eagle Row, room 480](https://maps.app.goo.gl/bGHKwasQyp5MnQND6). If possible, please email me before coming to ensure that no two students book the same time slot.\n\n# Academic Integrity\n\nUpon every individual who is a part of Emory University falls the responsibility for maintaining in the life of Emory a standard of unimpeachable honour in all academic work. The [Honour Code of Emory College](http://catalog.college.emory.edu/academic/policies-regulations/honor-code.html) is based on the fundamental assumption that every loyal person of the University not only will conduct his or her own life according to the dictates of the highest honor, but will also refuse to tolerate in others action which would sully the good name of the institution. Academic misconduct is an offense generally defined as any action or inaction which is offensive to the integrity and honesty of the members of the academic community. Any suspected case of academic misconduct will be referred to the Emory Honour Council.\n\n# Artificial Intelligence\n\nStudents have to submit ten problem sets and complete five in-class quizzes. You are allowed to use AI to assist with your assignments. I recommend using [GitHub Copilot](https://copilot.github.com/) to generate code snippets, as it is free for students and provides good suggestions and explanations. [Claude](https://claude.ai), [ChatGPT](https://chat.openai.com), and [Perplexity AI](https://perplexity.ai) are also good tools. I am available to provide support and assistance with these tools during office hours or by appointment. However, please note that any errors or omissions resulting from the use of AI tools are your responsibility. Do not rely solely on AI to complete your assignments; you must always double-check your work. Remember to cite all sources used in your problem sets and projects, including AI tools. Please include a note at the end of any document indicating that AI was used in its development.\n\n# Special Needs and Accessibility Services\n\nI am fully committed to providing the necessary accommodations to ensure that all students have an equal opportunity to succeed in this course. Students with medical/health conditions that might impact academic success should visit the [Department of Accessibility Services (DAS)](http://accessibility.emory.edu/) to determine eligibility for appropriate accommodations. Students who receive accommodations should contact me with an Accommodation Letter from the DAS at the beginning of the semester, or as soon as the accommodation is granted. If you wish to do so, feel free to request an individual meeting to further discuss the specific accommodations. \n\n# English Language Learners\n\nEmory University welcomes students from around the country and the world, and the unique perspectives international and multilingual students bring enrich the campus community. To empower multilingual learners, an array of support is available including language and culture workshops and individual appointments. For more information about English Language Learning support at Emory, please contact the ELLP Specialists at <https://writingcenter.emory.edu>. No student will be penalised for their command of the English language.\n\n# Assignments and Grading Policy\n\n**Problem Sets (50%).** There will be ten problem sets throughout the course. These assignments are designed to reinforce concepts covered in lectures and readings, and to provide hands-on practice with statistical programming. Problem sets will include a mix of theoretical questions and practical applications. They will be assigned regularly and must be completed individually. You may discuss your work with other colleagues as long as you do not copy entire sentences, just changing a few words. If you worked with other students, please write down their names on your assignment. Please also acknowledge any sources you used in your work, including textbooks, articles, and AI resources. *Any assignment submitted after the due date/time will automatically be graded for half points*. To accommodate unexpected circumstances, your lowest assignment grade will be automatically dropped at the end of the semester. *The same applies to in-class quizzes*. Please submit all assignments in Jupyter Notebook format (`.ipynb`) via Canvas until midnight on the due date.\n\n**Class Quizzes (30%).** Students will also take five in-class quizzes throughout the semester. These quizzes will be based on the lectures from the previous weeks. They will be designed to test your understanding of the material and your ability to apply the concepts to new problems. Quizzes will be open-book and open-notes, and students have 50 minutes to complete them. You are **not** allowed to use AI tools. They are individual assessments, and students are not allowed to discuss the questions with their colleagues in class. \n\n**Final Project (20%).** The final project will consist of a short report, created using Jupyter and using one of the datasets shared on the course [GitHub repository](https://github.com/danilofreire/qtm151/tree/main/final-project). Further instructions will be provided in class. The final project will be due on the last day of class.\n\n# Grading Scale\n\nEach student's final grade will be based on the following after rounding up to the nearest point:\n\n| Grade | A       | A-      | B+      | B       | B-      | C       | D       | F    |\n|-------|---------|---------|---------|---------|---------|---------|---------|------|\n| Range | 91%–100%| 86%–90% | 81%–85% | 76%–80% | 71%–75% | 66%–70% | 60%–65% | <60% |\n\n# Course Outline and Suggested Readings\n\nThe lecture notes cover all the necessary material for the course, and the weekly suggested readings are recommended for those who want to deepen their understanding of the course topics. As mentioned above, the course outline is subject to change, and I will update the syllabus if needed. Please remember to check the course [GitHub repository](https://github.com/danilofreire/qtm151) regularly.\n\n## Module 01: Introduction to Python, Jupyter, and GitHub\n\n### Wednesday, August 28:\n\n- Syllabus and course repository: <https://github.com/danilofreire/qtm350>.\n- Lecture 01: [Welcome to QTM 151 - Introduction](https://danilofreire.github.io/qtm350/lectures/lecture-01/01-introduction.html).\n- [Course Tutorials: How to Install Anaconda, Jupyter, PostgreSQL, VSCode, and Open a Free Educational Account on GitHub](https://github.com/danilofreire/qtm350/tutorials).\n\nWeekly suggested readings:\n\n- [DataCamp: SQL vs Python: Which Should You Learn?](https://www.datacamp.com/blog/sql-vs-python-which-to-learn) (Note: *both!*)\n- Cao, L. (2017). [Data Science: A Comprehensive Overview](https://dl.acm.org/doi/pdf/10.1145/3076253). ACM Computing Surveys (CSUR), 50(3), 1-42.\n- Brady, H. E. (2019). [The Challenge of Big Data and Data Science](https://www.annualreviews.org/content/journals/10.1146/annurev-polisci-090216-023229). Annual Review of Political Science, 22(1), 297-323.\n- Zitnik, M., Nguyen, F., Wang, B., Leskovec, J., Goldenberg, A., & Hoffman, M. M. (2019). [Machine Learning for Integrating Data in Biology and Medicine: Principles, Practice, and Opportunities](https://www.sciencedirect.com/science/article/abs/pii/S1566253518304482). Information Fusion, 50, 71-91.\n\n### Monday, September 02: Labour Day (no class)\n\n### Wednesday, September 04:\n\n- Lecture 02: [GitHub Review](https://danilofreire.github.io/qtm151/lectures/lecture-02/02-github-review.html) and [Introduction to Jupyter Notebooks](https://github.com/danilofreire/qtm151/blob/main/lectures/lecture-02/02-jupyter.ipynb).\n- **Assignment 01:** [Problem Set 01](https://github.com/danilofreire/qtm151/blob/main/assignments/01-assignment.ipynb).\n\nWeekly suggested readings:\n\n- [Microsoft: Jupyter Notebooks in VSCode](https://code.visualstudio.com/docs/datascience/jupyter-notebooks).\n- VanderPlas, J. (2016). Python Data Science Handbook: Essential Tools for Working with Data. O'Reilly Media. [Chapter 01: IPython: Beyond Normal Python](https://jakevdp.github.io/PythonDataScienceHandbook/index.html).\n- McKinney, W. (2022). Python for Data Analysis: Data Wrangling with Pandas, NumPy, and IPython (3rd ed.). O'Reilly Media. [Chapter 02: Python Language Basics, IPython, and Jupyter Notebooks](https://wesmckinney.com/book/python-basics).\n- [Corey Schafer: Jupyter Notebook Tutorial - Introduction, Setup, and Walkthrough](https://www.youtube.com/watch?v=HW29067qVWk). (Note: Corey Schafer is a great Python instructor on YouTube. Check out his other videos as well.)\n- [Markdown Guide](https://www.markdownguide.org/basic-syntax/).\n\n## Module 02: Python Data Types and Controlling Flows\n\n### Monday September 09:\n\n- Lecture 03: [Variables and Lists](https://github.com/danilofreire/qtm151/blob/main/lectures/lecture-03/03-variables-lists.ipynb).\n\n### Wednesday, September 11:\n\n- Lecture 04: [Mathematical Operations, Arrays, and Random Numbers](https://github.com/danilofreire/qtm151/blob/main/lectures/lecture-04/04-maths-arrays-random.ipynb).\n- **Assignment 01 due (5%).**\n- **Assignment 02:** [Problem Set 02](https://github.com/danilofreire/qtm151/blob/main/assignments/02-assignment.ipynb).\n\nWeekly suggested readings:\n\n- [Real Python: Python Data Types](https://realpython.com/python-data-types/).\n- [Python Documentation: An Informal Introduction to Python](https://docs.python.org/3/tutorial/introduction.html).\n- [NumPy Documentation: Quickstart Tutorial](https://numpy.org/doc/stable/user/quickstart.html).\n- [Programiz: Math Operations in Python](https://www.programiz.com/python-programming/operators).\n- Matthes, E. (2019). Python Crash Course: A Hands-On, Project-Based Introduction to Programming (2nd ed.). No Starch Press. [Chapter 02](https://nostarch.com/download/PCC3e_ch2sample_8.17.22.pdf).\n- Severance, C. (2016). Python for Everybody: Exploring Data in Python 3. CreateSpace Independent Publishing Platform. [Chapters 3-11](https://www.py4e.com/lessons) (Note: Read only the chapters which interest you).\n\n### Monday, September 16:\n\n- Lecture 05: [Boolean Variables and If/Else Statements](https://github.com/danilofreire/qtm151/blob/main/lectures/lecture-05/05-boolean-if-else.ipynb).\n\n### Wednesday, September 18:\n\n- Lecture 06: [While Loops and For Loops](https://github.com/danilofreire/qtm151/blob/main/lectures/lecture-06/06-while-for.ipynb).\n- **Assignment 02 due (5%).**\n- **Assignment 03:** [Problem Set 03](https://github.com/danilofreire/qtm151/blob/main/assignments/03-assignment.ipynb).\n\nWeekly suggested readings:\n\n- [Real Python: Conditional Statements in Python](https://realpython.com/python-conditional-statements/).\n- [Python Official Documentation: More Control Flow Tools](https://docs.python.org/3/tutorial/controlflow.html).\n- [Python Official Documentation: Compound Statements](https://docs.python.org/3/reference/compound_stmts.html).\n- [Real Python: Python 'while' Loops (Indefinite Iteration)](https://realpython.com/python-while-loop/). \n- [Real Python: Python 'for' Loops (Definite Iteration)](https://realpython.com/python-for-loop/).\n- [W3Schools: Python While Loops](https://www.w3schools.com/python/python_while_loops.asp).\n- Sweigart, A. (2019). Automate the Boring Stuff with Python: Practical Programming for Total Beginners (2nd ed.). No Starch Press. [Chapter 02: Flow Control](https://automatetheboringstuff.com/2e/chapter2/).\n\n## Module 03: Writing and Running Functions\n\n### Monday, September 23:\n\n- Lecture 07: [Applications 1: Simulation Studies](https://github.com/danilofreire/qtm151/blob/main/lectures/lecture-07/07-applications-simulation.ipynb).\n\n### Wednesday, September 25:\n\n- Lecture 08: [Functions and Arguments](https://danilofreire.github.io/qtm151/lectures/lecture-08/08-functions-arguments.ipynb).\n- **Assignment 03 due (5%).**\n- **Assignment 04:** [Problem Set 04](https://github.com/danilofreire/qtm151/blob/main/assignments/04-assignment.ipynb).\n\nWeekly suggested readings:\n\n- [NumPy Random Module Tutorial](https://www.w3schools.com/python/numpy/numpy_random.asp).\n- [Python Functions](https://www.w3schools.com/python/python_functions.asp).\n- [Real Python: Defining Functions in Python](https://realpython.com/defining-your-own-python-function/).\n- [Python Tutorial for Beginners: Functions](https://www.youtube.com/watch?v=9Os0o3wzS_I).\n\n### Monday, September 30:\n\n- Lecture 09: [Global and Local Variables](https://github.com/danilofreire/qtm151/blob/main/lectures/lecture-09/09-global-local.ipynb).\n\n### Wednesday, October 02:\n\n- Lecture 10: [**Quiz 01: Application 02 - Operations over Multiple Datasets (6%)**](https://github.com/danilofreire/qtm151/blob/main/lectures/lecture-10/10-operations-multiple-datasets.ipynb).\n- **Assignment 05:** [Problem Set 05](https://github.com/danilofreire/qtm151/blob/main/assignments/05-assignment.ipynb).\n\n### Friday, October 04: (exceptionally)\n\n- **Assignment 04 due (5%).**\n\nWeekly suggested readings:\n\n- [Programiz: Python Variable Scope (With Examples)](https://www.programiz.com/python-programming/global-local-nonlocal-variables).\n- [NumPy Documentation: Indexing on `ndarrays`](https://numpy.org/doc/stable/user/basics.indexing.html).\n- [Pandas Documentation: How do I Select a Subset of a `DataFrame`?](https://pandas.pydata.org/pandas-docs/stable/getting_started/intro_tutorials/03_subset_data.html).\n\n### Monday, October 07:\n\n- Lecture 11: [Subsetting Data](https://github.com/danilofreire/qtm151/blob/main/lectures/lecture-11/11-subsetting-data.ipynb).\n\nWeekly suggested readings:\n\n- McKinney, W. (2022). Python for Data Analysis: Data Wrangling with Pandas, NumPy, and IPython (3rd ed.). O'Reilly Media. [Chapter 05: Getting Started with Pandas](https://wesmckinney.com/book/pandas-basics).\n- VanderPlas, J. (2016). Python Data Science Handbook: Essential Tools for Working with Data. O'Reilly Media. [Section 3.2: Data Indexing and Selection](https://jakevdp.github.io/PythonDataScienceHandbook/03.02-data-indexing-and-selection.html).\n- [Real Python: Linear Regression in Python](https://realpython.com/linear-regression-in-python/)\n- [Towards Data Science: Linear Regression in Python](https://towardsdatascience.com/linear-regression-using-python-b136c91bf0a2).\n- Sheppard, K. (2023). Introduction to Python for Econometrics, Statistics and Data Analysis (5th ed.). University of Oxford. [Chapter 21: Statistical Analysis with `statsmodels`](https://www.kevinsheppard.com/files/teaching/python/notes/python_introduction_2021.pdf).\n\n## Module 04: Data Manipulation with Pandas\n\n### Wednesday, October 09:\n\n- Lecture 12: [Application 03: Linear Models](https://github.com/danilofreire/qtm151/blob/main/lectures/lecture-12/12-linear-models.ipynb). \n- **Assignment 05 due (5%).**\n- **Assignment 06:** [Problem Set 06](https://github.com/danilofreire/qtm151/blob/main/assignments/06-assignment.ipynb).\n\n### Monday, October 14: Fall Break (no class)\n\n### Wednesday, October 16:\n\n- Lecture 13: [Creating and Replacing Variables](https://github.com/danilofreire/qtm151/blob/main/lectures/lecture-13/13-creating-replacing-variables.ipynb).\n- **Assignment 06 due (5%).**\n- **Assignment 07:** [Problem Set 07](https://github.com/danilofreire/qtm151/blob/main/assignments/07-assignment.ipynb).\n\nWeekly suggested readings:\n\n- [Python for Data Analysis: Data Cleaning and Preparation](https://wesmckinney.com/book/data-cleaning).\n- [Codedamn: How to use the Replace function in Python](https://codedamn.com/news/python/how-to-use-the-replace-function-in-python).\n\n### Monday, October 21:\n\n- Lecture 14: [**Quiz 2: Application 4: Random Assignment (6%)**](https://github.com/danilofreire/qtm151/blob/main/lectures/lecture-14/14-random-assignment.ipynb).\n\n### Wednesday, October 23:\n\n- Lecture 15: [Aggregating Data](https://github.com/danilofreire/qtm151/blob/main/lectures/lecture-15/15-aggregating-data.ipynb).\n- **Assignment 07 due (5%).**\n- **Assignment 08:** [Problem Set 08](https://github.com/danilofreire/qtm151/blob/main/assignments/08-assignment.ipynb).\n\nWeekly suggested readings:\n\n- VanderPlas, J. (2016). Python Data Science Handbook: Essential Tools for Working with Data. O'Reilly Media. [Chapter 3: Data Manipulation with Pandas](https://jakevdp.github.io/PythonDataScienceHandbook/03.00-introduction-to-pandas.html).\n- McKinney, W. (2022). Python for Data Analysis: Data Wrangling with Pandas, NumPy, and IPython (3rd ed.). O'Reilly Media. [Chapter 07: Data Cleaning and Preparation](https://wesmckinney.com/book/data-cleaning).\n- [DataCamp: Pandas Tutorial: DataFrames in Python](https://www.datacamp.com/tutorial/pandas-tutorial-dataframe-python).\n- [Real Python: Pandas Tutorial: DataFrames in Python](https://realpython.com/pandas-dataframe/).\n\n## Module 05: Data Manipulation with SQL\n\n### Monday, October 28:\n\n- Lecture 16: [Merging Data](https://github.com/danilofreire/qtm151/blob/main/lectures/lecture-16/16-merging-data.ipynb).\n\n### Wednesday, October 30:\n\n- Lecture 17: [Introduction to SQL](https://github.com/danilofreire/qtm151/blob/main/lectures/lecture-17/17-introduction-sql.ipynb).\n- **Assignment 08 due (5%).**\n- **Assignment 09:** [Problem Set 09](https://github.com/danilofreire/qtm151/blob/main/assignments/09-assignment.ipynb).\n- **Instructions for the Final Project:** [Final Project](https://github.com/danilofreire/qtm151/blob/main/final-project).\n\nWeekly suggested readings:\n\n- [Mode Analytics: SQL Tutorial](https://mode.com/sql-tutorial/).\n- [Real Python: SQL Databases and SQLite](https://realpython.com/python-sql-libraries/).\n- [Khan Academy: SQL Basics](https://www.khanacademy.org/computing/computer-programming/sql). (Note: Khan Academy is a great resource for learning SQL and other programming languages).\n- [Coursera: PostgreSQL for Everybody](https://www.coursera.org/specializations/postgresql-for-everybody).\n- [PostgreSQL Tutorial](https://www.postgresqltutorial.com/).\n- [PostgreSQL Documentation: SQL Commands](https://www.postgresql.org/docs/current/sql-commands.html). (Note: For reference only).\n\n### Monday, November 04:\n\n- Lecture 18: [**Quiz 3: Application 5: Practicing Chaining (6%)**](https://github.com/danilofreire/qtm151/blob/main/lectures/lecture-18/18-chaining.ipynb).\n\n### Wednesday, November 06:\n\n- Lecture 19: [Import SQL Data into Python](https://github.com/danilofreire/qtm151/blob/main/lectures/lecture-19/19-sql-python.ipynb).\n- **Assignment 09 due (5%).**\n- **Assignment 10:** [Problem Set 10](https://github.com/danilofreire/qtm151/blob/main/assignments/10-assignment.ipynb).\n\nWeekly suggested readings:\n\n- [Pandas Documentation: SQL Databases](https://pandas.pydata.org/docs/user_guide/io.html#sql-queries).\n- [Real Python: Working with SQLite Databases Using Python and Pandas](https://realpython.com/python-sql-libraries/).\n- [Mode Analytics: SQL Joins](https://mode.com/sql-tutorial/sql-joins/).\n- [PostgreSQL Documentation: Joins Between Tables](https://www.postgresql.org/docs/current/tutorial-join.html).\n\n## Module 06: Time Series and Panel Data\n\n### Monday, November 11:\n\n- Lecture 20: [Merging Tables in SQL](https://github.com/danilofreire/qtm151/blob/main/lectures/lecture-20/20-sql-merging.ipynb).\n\n### Wednesday, November 13:\n\n- Lecture 21: [Time Series Analysis](https://github.com/danilofreire/qtm151/blob/main/lectures/lecture-21/21-time-series.ipynb).\n- **Assignment 10 due (5%).**\n\nWeekly suggested readings:\n\n- [W3 School: SQL Joins](https://www.w3schools.com/sql/sql_join.asp).\n- VanderPlas, J. (2016). Python Data Science Handbook: Essential Tools for Working with Data. O'Reilly Media. [Section 3.11: Working with Time Series](https://jakevdp.github.io/PythonDataScienceHandbook/03.11-working-with-time-series.html).\n- McKinney, W. (2022). Python for Data Analysis: Data Wrangling with Pandas, NumPy, and IPython (3rd ed.). O'Reilly Media. [Chapter 11: Time Series](https://wesmckinney.com/book/time-series).\n- [Pandas Documentation: Time Series / Date functionality](https://pandas.pydata.org/pandas-docs/stable/user_guide/timeseries.html).\n\n### Monday, November 18:\n\n- Lecture 22: [**Quiz 4: Application 6: Practice SQL Queries (6%)**](https://github.com/danilofreire/qtm151/blob/main/lectures/lecture-22/22-sql-queries.ipynb).\n\n### Wednesday, November 20:\n\n- Lecture 23: [Pivot Tables](https://github.com/danilofreire/qtm151/blob/main/lectures/lecture-23/23-pivot-tables.ipynb).\n\nWeekly suggested readings:\n\n- VanderPlas, J. (2016). Python Data Science Handbook: Essential Tools for Working with Data. O'Reilly Media. [Section 3.9: Pivot Tables](https://jakevdp.github.io/PythonDataScienceHandbook/03.09-pivot-tables.html).\n- [Pandas Documentation: Reshaping and Pivot Tables](https://pandas.pydata.org/pandas-docs/stable/user_guide/reshaping.html).\n- [Analytics Vidhya: Create Pivot Table Using Pandas in Python](https://www.analyticsvidhya.com/blog/2020/03/pivot-table-pandas-python/).\n- [Real Python: How to Create Pivot Tables With `pandas`](https://realpython.com/how-to-pandas-pivot-table/).\n\n## Module 07: Text Data and Advanced Plots\n\n### Monday, November 25:\n\n- Lecture 24: [**Quiz 5: Application 8: Time Data, Panel Data, and Plots (6%)**](https://github.com/danilofreire/qtm151/blob/main/lectures/lecture-24/24-time-panel-plots.ipynb).\n\n### Wednesday, November 27: Thanksgiving Break (no class)\n\n### Monday, December 02:\n\n- Lecture 25: [Manipulating Text Data](https://github.com/danilofreire/qtm151/blob/main/lectures/lecture-25/25-text-data.ipynb).\n\n### Wednesday, December 04:\n\n- Lecture 26: [Advanced Plots](https://github.com/danilofreire/qtm151/blob/main/lectures/lecture-26/26-advanced-plots.ipynb).\n\nWeekly suggested readings:\n\n- [Real Python: Python String Formatting Best Practices](https://realpython.com/python-string-formatting/).\n\n### Monday, December 09:\n\n- **Final Project due (20%).**\n","srcMarkdownNoYaml":"\n\n# Course Description\n\nWelcome to [QTM 350](https://github.com/danilofreire/qtm350)! This course introduces key tools in modern data science, focusing on three essential aspects: reliability, reproducibility, and robustness. We will cover command line interfaces and [vim](https://www.vim.org/), version control with [Git](https://git-scm.com/) and [GitHub](https://github.com/), and literate programming using [Quarto](https://quarto.org/) and [Jupyter Notebooks](https://jupyter.org/). You will also learn about data storage and manipulation with [SQL](https://www.w3schools.com/sql/) and [Pandas](https://pandas.pydata.org/), data visualisation using [Matplotlib](https://matplotlib.org/), [Seaborn](https://seaborn.pydata.org/) and [plotnine](https://plotnine.readthedocs.io/), and parallel computing with [Dask](https://www.dask.org/). We will explore artificial intelligence-assisted programming with [GitHub Copilot](https://github.com/features/copilot) and finish with [Docker](https://www.docker.com/) and containerisation. Throughout the course, you will learn how to use these tools to improve your data science workflow and create more reliable, reproducible, and robust analyses.\n\nBy working with real-world datasets and problems, students will gain hands-on experience using these tools and methods to extract insights from data. This course will develop technical skills and critical thinking needed to solve complex data challenges. Upon completion, students will be prepared to confidently apply these tools to their own research and professional work.\n\n# Learning Objectives\n\nBy the end of this course, students will be able to:\n\n- Use data science tools for project collaboration and version control\n- Apply advanced techniques for data storage, manipulation, and querying\n- Create clear data visualisations and write well-documented code\n- Use AI tools to help with programming tasks\n- Understand the basics of containerisation and parallel computing\n \n# Course Requirements\n\nSome knowledge of programming is recommended, and familiarity with basic data manipulation and visualisation techniques is helpful. However, no prior experience with the tools covered in the course is required.\n\nIn terms of software, you will need to install the following tools: [Anaconda distribution of Python 3.x](https://www.anaconda.com/), [VS Code](https://code.visualstudio.com/), [PostgreSQL](https://www.postgresql.org/), [GitHub Desktop](https://github.com/apps/desktop), [Git](https://git-scm.com/), [Docker](https://www.docker.com/), [Quarto](https://quarto.org/), [Dask](https://dask.org/), [GitHub Copilot](https://copilot.github.com/).\n\nPlease feel free to reach out if you have any questions about the course content or your readiness to take the class.\n\n# Materials\n\nThis course is designed to be self-contained, providing all the necessary resources and materials to succeed in mastering the core concepts. However, students are encouraged to explore the following suggested books and online courses to deepen their understanding of the topics covered in the course.\n\n## Suggested Books\n\n- [Python for Data Analysis](https://wesmckinney.com/book/) by Wes McKinney\n- [Elements of Data Science](https://allendowney.github.io/ElementsOfDataScience/README.html) by Allen Downey\n- [SQL for Data Scientists](https://sqlfordatascientists.com/) by Renee M. P. Teate\n- [Data Science on the Command Line](https://www.datascienceatthecommandline.com/) by Jeroen Janssens\n- [Docker for Data Science](https://www.oreilly.com/library/view/docker-for-data/9781484230121/) by Joshua Cook\n- [Pro Git](https://git-scm.com/book/en/v2) by Scott Chacon and Ben Straub\n- [Free programming books](https://github.com/EbookFoundation/free-programming-books)\n\n### Online Courses\n\n- [Coursera: Python for Everybody Specialisation](https://www.coursera.org/specializations/python)\n- [edX: Python Basics for Data Science](https://www.edx.org/learn/python/ibm-python-basics-for-data-science)\n- [Codecademy: Learn Python](https://www.codecademy.com/learn/learn-python-3)\n- [DataCamp: Introduction to SQL](https://www.datacamp.com/courses/intro-to-sql-for-data-science)\n- [Coursera: SQL for Data Science](https://www.coursera.org/learn/sql-for-data-science)\n- [Coursera: Introduction to Git and GitHub](https://www.classcentral.com/course/introduction-git-github-18060)\n- [Microsoft Learn: GitHub Copilot Fundamentals](https://learn.microsoft.com/en-us/training/paths/copilot/)\n\n### Documentation\n\n- [Official Python Documentation](https://docs.python.org/3/)\n- [NumPy Documentation](https://numpy.org/doc/)\n- [Pandas Documentation](https://pandas.pydata.org/docs/)\n- [Matplotlib Documentation](https://matplotlib.org/stable/contents.html)\n- [PostgreSQL Documentation](https://www.postgresql.org/docs/)\n- [Git Documentation](https://git-scm.com/doc)\n- [GitHub Documentation](https://docs.github.com/en)\n- [Dask Documentation](https://docs.dask.org/en/latest/)\n- [GitHub Co-Pilot Documentation](https://copilot.github.com/)\n- [Docker Documentation](https://docs.docker.com/)\n\n# Course Information\n\nWe will meet every Monday and Wednesday from 14:30 to 15:45 at [XXXXX](https://quantitative.emory.edu). It is important that you read the materials before class. All information about the course is available on the course's GitHub repository at <https://github.com/danilofreire/qtm350>. While I will try to adhere to the course schedule as much as possible, I also want to adapt to your learning pace and style. The syllabus and course plan may change in the semester. Again, please check [the course repository](https://github.com/danilofreire/qtm350) regularly to check for updates. I will also announce any changes in class and via email.\n\n# Software\n\nWe will mainly use [Python](https://www.python.org) in this course. Python is a free, versatile, and powerful programming language that is widely used in data science, machine learning, and scientific computing. I recommend using the [Anaconda distribution](https://www.anaconda.com/products/individual) as it comes with many necessary Python libraries for data analysis, such as [Pandas](https://pandas.pydata.org/), [NumPy](https://numpy.org/), and [Jupyter](https://jupyter.org/). \n\nYou can write your Python code in any text editor, but I recommend [VS Code](https://code.visualstudio.com/) with the [Python extension](https://marketplace.visualstudio.com/items?itemName=ms-python.python). [Pycharm](https://www.jetbrains.com/pycharm/) is also well-regarded by developers. If you are feeling adventurous, you can also use [Neovim](https://neovim.io/) with the [coc-pyright](https://github.com/fannheyward/coc-pyright) plugin. That is, if [you can exit the editor](https://stackoverflow.blog/2017/05/23/stack-overflow-helping-one-million-developers-exit-vim/). :)\n\nWe will use [PostgreSQL](https://www.postgresql.org/) for database management. You can download PostgreSQL from the [official website](https://www.postgresql.org/). Please also install [pgAdmin](https://www.pgadmin.org/) and the [VS Code extension](https://marketplace.visualstudio.com/items?itemName=ckolkman.vscode-postgres) for PostgreSQL to interact with the database.\n\nWe will also use [Jupyter Notebooks](https://jupyter.org/) and [Quarto](https://quarto.org) in class. Jupyter itself comes pre-installed with Anaconda, but please install the [Jupyter extension for VS Code](https://marketplace.visualstudio.com/items?itemName=ms-toolsai.jupyter&ssr=false) as well. To install Quarto, please follow the instructions on the [official website](https://quarto.org). We will have a hands-on session to learn how to use both of them effectively.\n\nPlease also install [Docker](https://www.docker.com/) to work with containers. Docker is a platform for developing, shipping, and running applications in containers. Containers allow you to package your application and its dependencies together into a single unit. This makes it easy to ensure that your application will run on any other machine, regardless of any custom settings that machine might have that could differ from the machine that was used for writing and testing the code.\n\nFinally, we will use [GitHub](https://github.com) for version control. Please create a free account on GitHub and install [GitHub Desktop](https://desktop.github.com/) to manage your repositories. We will also use [Git](https://git-scm.com/) in the course. Git is a distributed version control system that allows you to track changes in your codebase and collaborate with others. You can install Git from the [official website](https://git-scm.com/).\n\nTo help you get started, I have prepared [a series of tutorials](https://github.com/danilofreire/qtm350/tree/main/tutorials) on how to install Anaconda, Jupyter, PostgreSQL, VS Code, GitHub Copilot, and open a free educational account on GitHub. Please follow these tutorials as soon as possible to ensure that you have all the necessary tools for the course.\n\n# Office Hours\n\nI am very flexible with office hours, but it is easier to contact me via email. Feel free to send me a message any time at [danilo.freire@emory.edu](mailto:danilo.freire@emory.edu), and I will likely reply within a few hours. If you prefer, you can meet me in the afternoon at my office. I am in the [Department of Quantitative Theory and Methods](https://qtm.emory.edu) almost every weekday. My office address is in the [Psychology and Interdisciplinary Sciences Building, 36 Eagle Row, room 480](https://maps.app.goo.gl/bGHKwasQyp5MnQND6). If possible, please email me before coming to ensure that no two students book the same time slot.\n\n# Academic Integrity\n\nUpon every individual who is a part of Emory University falls the responsibility for maintaining in the life of Emory a standard of unimpeachable honour in all academic work. The [Honour Code of Emory College](http://catalog.college.emory.edu/academic/policies-regulations/honor-code.html) is based on the fundamental assumption that every loyal person of the University not only will conduct his or her own life according to the dictates of the highest honor, but will also refuse to tolerate in others action which would sully the good name of the institution. Academic misconduct is an offense generally defined as any action or inaction which is offensive to the integrity and honesty of the members of the academic community. Any suspected case of academic misconduct will be referred to the Emory Honour Council.\n\n# Artificial Intelligence\n\nStudents have to submit ten problem sets and complete five in-class quizzes. You are allowed to use AI to assist with your assignments. I recommend using [GitHub Copilot](https://copilot.github.com/) to generate code snippets, as it is free for students and provides good suggestions and explanations. [Claude](https://claude.ai), [ChatGPT](https://chat.openai.com), and [Perplexity AI](https://perplexity.ai) are also good tools. I am available to provide support and assistance with these tools during office hours or by appointment. However, please note that any errors or omissions resulting from the use of AI tools are your responsibility. Do not rely solely on AI to complete your assignments; you must always double-check your work. Remember to cite all sources used in your problem sets and projects, including AI tools. Please include a note at the end of any document indicating that AI was used in its development.\n\n# Special Needs and Accessibility Services\n\nI am fully committed to providing the necessary accommodations to ensure that all students have an equal opportunity to succeed in this course. Students with medical/health conditions that might impact academic success should visit the [Department of Accessibility Services (DAS)](http://accessibility.emory.edu/) to determine eligibility for appropriate accommodations. Students who receive accommodations should contact me with an Accommodation Letter from the DAS at the beginning of the semester, or as soon as the accommodation is granted. If you wish to do so, feel free to request an individual meeting to further discuss the specific accommodations. \n\n# English Language Learners\n\nEmory University welcomes students from around the country and the world, and the unique perspectives international and multilingual students bring enrich the campus community. To empower multilingual learners, an array of support is available including language and culture workshops and individual appointments. For more information about English Language Learning support at Emory, please contact the ELLP Specialists at <https://writingcenter.emory.edu>. No student will be penalised for their command of the English language.\n\n# Assignments and Grading Policy\n\n**Problem Sets (50%).** There will be ten problem sets throughout the course. These assignments are designed to reinforce concepts covered in lectures and readings, and to provide hands-on practice with statistical programming. Problem sets will include a mix of theoretical questions and practical applications. They will be assigned regularly and must be completed individually. You may discuss your work with other colleagues as long as you do not copy entire sentences, just changing a few words. If you worked with other students, please write down their names on your assignment. Please also acknowledge any sources you used in your work, including textbooks, articles, and AI resources. *Any assignment submitted after the due date/time will automatically be graded for half points*. To accommodate unexpected circumstances, your lowest assignment grade will be automatically dropped at the end of the semester. *The same applies to in-class quizzes*. Please submit all assignments in Jupyter Notebook format (`.ipynb`) via Canvas until midnight on the due date.\n\n**Class Quizzes (30%).** Students will also take five in-class quizzes throughout the semester. These quizzes will be based on the lectures from the previous weeks. They will be designed to test your understanding of the material and your ability to apply the concepts to new problems. Quizzes will be open-book and open-notes, and students have 50 minutes to complete them. You are **not** allowed to use AI tools. They are individual assessments, and students are not allowed to discuss the questions with their colleagues in class. \n\n**Final Project (20%).** The final project will consist of a short report, created using Jupyter and using one of the datasets shared on the course [GitHub repository](https://github.com/danilofreire/qtm151/tree/main/final-project). Further instructions will be provided in class. The final project will be due on the last day of class.\n\n# Grading Scale\n\nEach student's final grade will be based on the following after rounding up to the nearest point:\n\n| Grade | A       | A-      | B+      | B       | B-      | C       | D       | F    |\n|-------|---------|---------|---------|---------|---------|---------|---------|------|\n| Range | 91%–100%| 86%–90% | 81%–85% | 76%–80% | 71%–75% | 66%–70% | 60%–65% | <60% |\n\n# Course Outline and Suggested Readings\n\nThe lecture notes cover all the necessary material for the course, and the weekly suggested readings are recommended for those who want to deepen their understanding of the course topics. As mentioned above, the course outline is subject to change, and I will update the syllabus if needed. Please remember to check the course [GitHub repository](https://github.com/danilofreire/qtm151) regularly.\n\n## Module 01: Introduction to Python, Jupyter, and GitHub\n\n### Wednesday, August 28:\n\n- Syllabus and course repository: <https://github.com/danilofreire/qtm350>.\n- Lecture 01: [Welcome to QTM 151 - Introduction](https://danilofreire.github.io/qtm350/lectures/lecture-01/01-introduction.html).\n- [Course Tutorials: How to Install Anaconda, Jupyter, PostgreSQL, VSCode, and Open a Free Educational Account on GitHub](https://github.com/danilofreire/qtm350/tutorials).\n\nWeekly suggested readings:\n\n- [DataCamp: SQL vs Python: Which Should You Learn?](https://www.datacamp.com/blog/sql-vs-python-which-to-learn) (Note: *both!*)\n- Cao, L. (2017). [Data Science: A Comprehensive Overview](https://dl.acm.org/doi/pdf/10.1145/3076253). ACM Computing Surveys (CSUR), 50(3), 1-42.\n- Brady, H. E. (2019). [The Challenge of Big Data and Data Science](https://www.annualreviews.org/content/journals/10.1146/annurev-polisci-090216-023229). Annual Review of Political Science, 22(1), 297-323.\n- Zitnik, M., Nguyen, F., Wang, B., Leskovec, J., Goldenberg, A., & Hoffman, M. M. (2019). [Machine Learning for Integrating Data in Biology and Medicine: Principles, Practice, and Opportunities](https://www.sciencedirect.com/science/article/abs/pii/S1566253518304482). Information Fusion, 50, 71-91.\n\n### Monday, September 02: Labour Day (no class)\n\n### Wednesday, September 04:\n\n- Lecture 02: [GitHub Review](https://danilofreire.github.io/qtm151/lectures/lecture-02/02-github-review.html) and [Introduction to Jupyter Notebooks](https://github.com/danilofreire/qtm151/blob/main/lectures/lecture-02/02-jupyter.ipynb).\n- **Assignment 01:** [Problem Set 01](https://github.com/danilofreire/qtm151/blob/main/assignments/01-assignment.ipynb).\n\nWeekly suggested readings:\n\n- [Microsoft: Jupyter Notebooks in VSCode](https://code.visualstudio.com/docs/datascience/jupyter-notebooks).\n- VanderPlas, J. (2016). Python Data Science Handbook: Essential Tools for Working with Data. O'Reilly Media. [Chapter 01: IPython: Beyond Normal Python](https://jakevdp.github.io/PythonDataScienceHandbook/index.html).\n- McKinney, W. (2022). Python for Data Analysis: Data Wrangling with Pandas, NumPy, and IPython (3rd ed.). O'Reilly Media. [Chapter 02: Python Language Basics, IPython, and Jupyter Notebooks](https://wesmckinney.com/book/python-basics).\n- [Corey Schafer: Jupyter Notebook Tutorial - Introduction, Setup, and Walkthrough](https://www.youtube.com/watch?v=HW29067qVWk). (Note: Corey Schafer is a great Python instructor on YouTube. Check out his other videos as well.)\n- [Markdown Guide](https://www.markdownguide.org/basic-syntax/).\n\n## Module 02: Python Data Types and Controlling Flows\n\n### Monday September 09:\n\n- Lecture 03: [Variables and Lists](https://github.com/danilofreire/qtm151/blob/main/lectures/lecture-03/03-variables-lists.ipynb).\n\n### Wednesday, September 11:\n\n- Lecture 04: [Mathematical Operations, Arrays, and Random Numbers](https://github.com/danilofreire/qtm151/blob/main/lectures/lecture-04/04-maths-arrays-random.ipynb).\n- **Assignment 01 due (5%).**\n- **Assignment 02:** [Problem Set 02](https://github.com/danilofreire/qtm151/blob/main/assignments/02-assignment.ipynb).\n\nWeekly suggested readings:\n\n- [Real Python: Python Data Types](https://realpython.com/python-data-types/).\n- [Python Documentation: An Informal Introduction to Python](https://docs.python.org/3/tutorial/introduction.html).\n- [NumPy Documentation: Quickstart Tutorial](https://numpy.org/doc/stable/user/quickstart.html).\n- [Programiz: Math Operations in Python](https://www.programiz.com/python-programming/operators).\n- Matthes, E. (2019). Python Crash Course: A Hands-On, Project-Based Introduction to Programming (2nd ed.). No Starch Press. [Chapter 02](https://nostarch.com/download/PCC3e_ch2sample_8.17.22.pdf).\n- Severance, C. (2016). Python for Everybody: Exploring Data in Python 3. CreateSpace Independent Publishing Platform. [Chapters 3-11](https://www.py4e.com/lessons) (Note: Read only the chapters which interest you).\n\n### Monday, September 16:\n\n- Lecture 05: [Boolean Variables and If/Else Statements](https://github.com/danilofreire/qtm151/blob/main/lectures/lecture-05/05-boolean-if-else.ipynb).\n\n### Wednesday, September 18:\n\n- Lecture 06: [While Loops and For Loops](https://github.com/danilofreire/qtm151/blob/main/lectures/lecture-06/06-while-for.ipynb).\n- **Assignment 02 due (5%).**\n- **Assignment 03:** [Problem Set 03](https://github.com/danilofreire/qtm151/blob/main/assignments/03-assignment.ipynb).\n\nWeekly suggested readings:\n\n- [Real Python: Conditional Statements in Python](https://realpython.com/python-conditional-statements/).\n- [Python Official Documentation: More Control Flow Tools](https://docs.python.org/3/tutorial/controlflow.html).\n- [Python Official Documentation: Compound Statements](https://docs.python.org/3/reference/compound_stmts.html).\n- [Real Python: Python 'while' Loops (Indefinite Iteration)](https://realpython.com/python-while-loop/). \n- [Real Python: Python 'for' Loops (Definite Iteration)](https://realpython.com/python-for-loop/).\n- [W3Schools: Python While Loops](https://www.w3schools.com/python/python_while_loops.asp).\n- Sweigart, A. (2019). Automate the Boring Stuff with Python: Practical Programming for Total Beginners (2nd ed.). No Starch Press. [Chapter 02: Flow Control](https://automatetheboringstuff.com/2e/chapter2/).\n\n## Module 03: Writing and Running Functions\n\n### Monday, September 23:\n\n- Lecture 07: [Applications 1: Simulation Studies](https://github.com/danilofreire/qtm151/blob/main/lectures/lecture-07/07-applications-simulation.ipynb).\n\n### Wednesday, September 25:\n\n- Lecture 08: [Functions and Arguments](https://danilofreire.github.io/qtm151/lectures/lecture-08/08-functions-arguments.ipynb).\n- **Assignment 03 due (5%).**\n- **Assignment 04:** [Problem Set 04](https://github.com/danilofreire/qtm151/blob/main/assignments/04-assignment.ipynb).\n\nWeekly suggested readings:\n\n- [NumPy Random Module Tutorial](https://www.w3schools.com/python/numpy/numpy_random.asp).\n- [Python Functions](https://www.w3schools.com/python/python_functions.asp).\n- [Real Python: Defining Functions in Python](https://realpython.com/defining-your-own-python-function/).\n- [Python Tutorial for Beginners: Functions](https://www.youtube.com/watch?v=9Os0o3wzS_I).\n\n### Monday, September 30:\n\n- Lecture 09: [Global and Local Variables](https://github.com/danilofreire/qtm151/blob/main/lectures/lecture-09/09-global-local.ipynb).\n\n### Wednesday, October 02:\n\n- Lecture 10: [**Quiz 01: Application 02 - Operations over Multiple Datasets (6%)**](https://github.com/danilofreire/qtm151/blob/main/lectures/lecture-10/10-operations-multiple-datasets.ipynb).\n- **Assignment 05:** [Problem Set 05](https://github.com/danilofreire/qtm151/blob/main/assignments/05-assignment.ipynb).\n\n### Friday, October 04: (exceptionally)\n\n- **Assignment 04 due (5%).**\n\nWeekly suggested readings:\n\n- [Programiz: Python Variable Scope (With Examples)](https://www.programiz.com/python-programming/global-local-nonlocal-variables).\n- [NumPy Documentation: Indexing on `ndarrays`](https://numpy.org/doc/stable/user/basics.indexing.html).\n- [Pandas Documentation: How do I Select a Subset of a `DataFrame`?](https://pandas.pydata.org/pandas-docs/stable/getting_started/intro_tutorials/03_subset_data.html).\n\n### Monday, October 07:\n\n- Lecture 11: [Subsetting Data](https://github.com/danilofreire/qtm151/blob/main/lectures/lecture-11/11-subsetting-data.ipynb).\n\nWeekly suggested readings:\n\n- McKinney, W. (2022). Python for Data Analysis: Data Wrangling with Pandas, NumPy, and IPython (3rd ed.). O'Reilly Media. [Chapter 05: Getting Started with Pandas](https://wesmckinney.com/book/pandas-basics).\n- VanderPlas, J. (2016). Python Data Science Handbook: Essential Tools for Working with Data. O'Reilly Media. [Section 3.2: Data Indexing and Selection](https://jakevdp.github.io/PythonDataScienceHandbook/03.02-data-indexing-and-selection.html).\n- [Real Python: Linear Regression in Python](https://realpython.com/linear-regression-in-python/)\n- [Towards Data Science: Linear Regression in Python](https://towardsdatascience.com/linear-regression-using-python-b136c91bf0a2).\n- Sheppard, K. (2023). Introduction to Python for Econometrics, Statistics and Data Analysis (5th ed.). University of Oxford. [Chapter 21: Statistical Analysis with `statsmodels`](https://www.kevinsheppard.com/files/teaching/python/notes/python_introduction_2021.pdf).\n\n## Module 04: Data Manipulation with Pandas\n\n### Wednesday, October 09:\n\n- Lecture 12: [Application 03: Linear Models](https://github.com/danilofreire/qtm151/blob/main/lectures/lecture-12/12-linear-models.ipynb). \n- **Assignment 05 due (5%).**\n- **Assignment 06:** [Problem Set 06](https://github.com/danilofreire/qtm151/blob/main/assignments/06-assignment.ipynb).\n\n### Monday, October 14: Fall Break (no class)\n\n### Wednesday, October 16:\n\n- Lecture 13: [Creating and Replacing Variables](https://github.com/danilofreire/qtm151/blob/main/lectures/lecture-13/13-creating-replacing-variables.ipynb).\n- **Assignment 06 due (5%).**\n- **Assignment 07:** [Problem Set 07](https://github.com/danilofreire/qtm151/blob/main/assignments/07-assignment.ipynb).\n\nWeekly suggested readings:\n\n- [Python for Data Analysis: Data Cleaning and Preparation](https://wesmckinney.com/book/data-cleaning).\n- [Codedamn: How to use the Replace function in Python](https://codedamn.com/news/python/how-to-use-the-replace-function-in-python).\n\n### Monday, October 21:\n\n- Lecture 14: [**Quiz 2: Application 4: Random Assignment (6%)**](https://github.com/danilofreire/qtm151/blob/main/lectures/lecture-14/14-random-assignment.ipynb).\n\n### Wednesday, October 23:\n\n- Lecture 15: [Aggregating Data](https://github.com/danilofreire/qtm151/blob/main/lectures/lecture-15/15-aggregating-data.ipynb).\n- **Assignment 07 due (5%).**\n- **Assignment 08:** [Problem Set 08](https://github.com/danilofreire/qtm151/blob/main/assignments/08-assignment.ipynb).\n\nWeekly suggested readings:\n\n- VanderPlas, J. (2016). Python Data Science Handbook: Essential Tools for Working with Data. O'Reilly Media. [Chapter 3: Data Manipulation with Pandas](https://jakevdp.github.io/PythonDataScienceHandbook/03.00-introduction-to-pandas.html).\n- McKinney, W. (2022). Python for Data Analysis: Data Wrangling with Pandas, NumPy, and IPython (3rd ed.). O'Reilly Media. [Chapter 07: Data Cleaning and Preparation](https://wesmckinney.com/book/data-cleaning).\n- [DataCamp: Pandas Tutorial: DataFrames in Python](https://www.datacamp.com/tutorial/pandas-tutorial-dataframe-python).\n- [Real Python: Pandas Tutorial: DataFrames in Python](https://realpython.com/pandas-dataframe/).\n\n## Module 05: Data Manipulation with SQL\n\n### Monday, October 28:\n\n- Lecture 16: [Merging Data](https://github.com/danilofreire/qtm151/blob/main/lectures/lecture-16/16-merging-data.ipynb).\n\n### Wednesday, October 30:\n\n- Lecture 17: [Introduction to SQL](https://github.com/danilofreire/qtm151/blob/main/lectures/lecture-17/17-introduction-sql.ipynb).\n- **Assignment 08 due (5%).**\n- **Assignment 09:** [Problem Set 09](https://github.com/danilofreire/qtm151/blob/main/assignments/09-assignment.ipynb).\n- **Instructions for the Final Project:** [Final Project](https://github.com/danilofreire/qtm151/blob/main/final-project).\n\nWeekly suggested readings:\n\n- [Mode Analytics: SQL Tutorial](https://mode.com/sql-tutorial/).\n- [Real Python: SQL Databases and SQLite](https://realpython.com/python-sql-libraries/).\n- [Khan Academy: SQL Basics](https://www.khanacademy.org/computing/computer-programming/sql). (Note: Khan Academy is a great resource for learning SQL and other programming languages).\n- [Coursera: PostgreSQL for Everybody](https://www.coursera.org/specializations/postgresql-for-everybody).\n- [PostgreSQL Tutorial](https://www.postgresqltutorial.com/).\n- [PostgreSQL Documentation: SQL Commands](https://www.postgresql.org/docs/current/sql-commands.html). (Note: For reference only).\n\n### Monday, November 04:\n\n- Lecture 18: [**Quiz 3: Application 5: Practicing Chaining (6%)**](https://github.com/danilofreire/qtm151/blob/main/lectures/lecture-18/18-chaining.ipynb).\n\n### Wednesday, November 06:\n\n- Lecture 19: [Import SQL Data into Python](https://github.com/danilofreire/qtm151/blob/main/lectures/lecture-19/19-sql-python.ipynb).\n- **Assignment 09 due (5%).**\n- **Assignment 10:** [Problem Set 10](https://github.com/danilofreire/qtm151/blob/main/assignments/10-assignment.ipynb).\n\nWeekly suggested readings:\n\n- [Pandas Documentation: SQL Databases](https://pandas.pydata.org/docs/user_guide/io.html#sql-queries).\n- [Real Python: Working with SQLite Databases Using Python and Pandas](https://realpython.com/python-sql-libraries/).\n- [Mode Analytics: SQL Joins](https://mode.com/sql-tutorial/sql-joins/).\n- [PostgreSQL Documentation: Joins Between Tables](https://www.postgresql.org/docs/current/tutorial-join.html).\n\n## Module 06: Time Series and Panel Data\n\n### Monday, November 11:\n\n- Lecture 20: [Merging Tables in SQL](https://github.com/danilofreire/qtm151/blob/main/lectures/lecture-20/20-sql-merging.ipynb).\n\n### Wednesday, November 13:\n\n- Lecture 21: [Time Series Analysis](https://github.com/danilofreire/qtm151/blob/main/lectures/lecture-21/21-time-series.ipynb).\n- **Assignment 10 due (5%).**\n\nWeekly suggested readings:\n\n- [W3 School: SQL Joins](https://www.w3schools.com/sql/sql_join.asp).\n- VanderPlas, J. (2016). Python Data Science Handbook: Essential Tools for Working with Data. O'Reilly Media. [Section 3.11: Working with Time Series](https://jakevdp.github.io/PythonDataScienceHandbook/03.11-working-with-time-series.html).\n- McKinney, W. (2022). Python for Data Analysis: Data Wrangling with Pandas, NumPy, and IPython (3rd ed.). O'Reilly Media. [Chapter 11: Time Series](https://wesmckinney.com/book/time-series).\n- [Pandas Documentation: Time Series / Date functionality](https://pandas.pydata.org/pandas-docs/stable/user_guide/timeseries.html).\n\n### Monday, November 18:\n\n- Lecture 22: [**Quiz 4: Application 6: Practice SQL Queries (6%)**](https://github.com/danilofreire/qtm151/blob/main/lectures/lecture-22/22-sql-queries.ipynb).\n\n### Wednesday, November 20:\n\n- Lecture 23: [Pivot Tables](https://github.com/danilofreire/qtm151/blob/main/lectures/lecture-23/23-pivot-tables.ipynb).\n\nWeekly suggested readings:\n\n- VanderPlas, J. (2016). Python Data Science Handbook: Essential Tools for Working with Data. O'Reilly Media. [Section 3.9: Pivot Tables](https://jakevdp.github.io/PythonDataScienceHandbook/03.09-pivot-tables.html).\n- [Pandas Documentation: Reshaping and Pivot Tables](https://pandas.pydata.org/pandas-docs/stable/user_guide/reshaping.html).\n- [Analytics Vidhya: Create Pivot Table Using Pandas in Python](https://www.analyticsvidhya.com/blog/2020/03/pivot-table-pandas-python/).\n- [Real Python: How to Create Pivot Tables With `pandas`](https://realpython.com/how-to-pandas-pivot-table/).\n\n## Module 07: Text Data and Advanced Plots\n\n### Monday, November 25:\n\n- Lecture 24: [**Quiz 5: Application 8: Time Data, Panel Data, and Plots (6%)**](https://github.com/danilofreire/qtm151/blob/main/lectures/lecture-24/24-time-panel-plots.ipynb).\n\n### Wednesday, November 27: Thanksgiving Break (no class)\n\n### Monday, December 02:\n\n- Lecture 25: [Manipulating Text Data](https://github.com/danilofreire/qtm151/blob/main/lectures/lecture-25/25-text-data.ipynb).\n\n### Wednesday, December 04:\n\n- Lecture 26: [Advanced Plots](https://github.com/danilofreire/qtm151/blob/main/lectures/lecture-26/26-advanced-plots.ipynb).\n\nWeekly suggested readings:\n\n- [Real Python: Python String Formatting Best Practices](https://realpython.com/python-string-formatting/).\n\n### Monday, December 09:\n\n- **Final Project due (20%).**\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"markdown"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["styles.css"],"toc":true,"output-file":"syllabus.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","appendix-view-license":"View License","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words","listing-page-filter":"Filter","draft":"Draft"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.5.39","theme":{"light":"lumen","dark":"solar"},"title":"QTM 350 - Data Science Computing"},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}