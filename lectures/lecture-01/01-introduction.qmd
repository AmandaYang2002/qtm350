---
title: "Welcome to Data Science Computing!"
subtitle: "Lecture 01: Introduction"
date: "28-08-2024"
date-format: "DD MMMM, YYYY"
author:
  - name: Danilo Freire
    orcid: 0000-0002-4712-6810
    email: danilo.freire@emory.edu
    affiliations: "Department of Quantitative Theory and Methods <br> Emory University"
format:
  clean-revealjs:
    self-contained: true
    footer: "[Lecture 01](https://danilofreire.github.io/qtm350/lectures/lecture-01/01-introduction.html)"
bibliography: references.bib
transition: slide
transition-speed: default
scrollable: true
engine: knitr
editor:
  render-on-save: true
---

```{r setup, include=FALSE}
# figures formatting setup
options(htmltools.dir.version = FALSE)
library(knitr)
opts_chunk$set(
  prompt = T,
  fig.align="center", #fig.width=6, fig.height=4.5, 
  # out.width="748px", #out.length="520.75px",
  dpi=300, #fig.path='Figs/',
  cache=T, #echo=F, warning=F, message=F
  engine.opts = list(bash = "-l")
  )

## Next hook based on this SO answer: https://stackoverflow.com/a/39025054
knit_hooks$set(
  prompt = function(before, options, envir) {
    options(
      prompt = if (options$engine %in% c('sh','bash', 'zsh')) '$ ' else 'R> ',
      continue = if (options$engine %in% c('sh','bash', 'zsh')) '$ ' else '+ '
      )
})

packages <- c("tidyverse", "emo", "fontawesome")

for (package in packages) {
  if (!require(package, character.only = TRUE)) {
    install.packages(package, dependencies = TRUE)
    library(package, character.only = TRUE)
  }
}
```

# Welcome to QTM350 - Data Science Computing! `r emo::ji('partying_face')` `r emo::ji('tada')` {background-color="#2d4563"}

## Lecture overview
### Our agenda for today

<br>

:::{.incremental}
- Introduction
- Motivation
- Class logistics
- Computer set up
:::

## Course materials
### Important links

::: {style="font-size: 28px;"}
`r fa('github')` Course repository: <https://github.com/danilofreire/qtm350>

`r fa('globe')` Course website: <https://danilofreire.github.io/qtm350>

This course is hosted on GitHub, which serves as our central hub for lecture materials, code examples, discussions, assignments, and final project guidelines. We will use Canvas for course administration, including submitting assignments, accessing grades, and receiving announcements. Please take some time to get to know both platforms, and reach out if you have any questions.

::: {.callout-note}
Please remember to check the course repository regularly for updates and announcements.
:::
:::

# Nice to meet you! `r emo::ji('waving_hand')` {background-color="#2d4563"}

## Instructor
### A bit about me

:::: {.columns}
::: {.column}
<img src="figures/profile.jpg" alt="Danilo Freire" width="200" height="200" align="center"/>

::: {style="font-size: 26px;"}
`r fa('envelope')` [danilo.freire@emory.edu](mailto:danilo.freire@emory.edu)

`r fa('globe')` <https://danilofreire.github.io/>

`r fa('github')` <https://github.com/danilofreire/>
:::
:::

::: {.column}
::: {style="font-size: 30px;"}
`r fa('chalkboard-user')` Visiting Assistant Professor in the [QTM](https://qtm.emory.edu)

`r fa('graduation-cap')` MA from the Graduate Institute Geneva, PhD from King's College London, Postdoc at Brown University, Senior Lecturer at the University of Lincoln, UK.

`r fa('book-open')` Research interests: computational social science, experimental methods, policy evaluation, political violence, organised crime.
:::
:::
::::

## {background-image="figures/neymar.jpg" background-size="100%"}

## {background-image="figures/carnaval.jpg" background-size="100%"}

## {background-image="figures/sp.jpg" background-size="100%"}

## {background-image="figures/montblanc.jpg" background-size="100%"}

## {background-image="figures/buzz.webp" background-size="100%"}

## {background-image="figures/moonwatch.jpg" background-size="100%"}

## What about you? (time permitting!)

<br>

Now it's your turn! `r emo::ji('wave')`

<br>

Please introduce yourself, tell us your name, your major, one thing you really like, and something we don't know about your city or country! `r emo::ji('smiling_face_with_smiling_eyes')`

## My teaching philosophy

<br>

- I love teaching and aim to make learning fun 
- Classes where students participate are the best
- Hands-on activities help you learn better
- I am always available to help and answer questions. And I mean it
- Your feedback helps me improve my teaching. Please let me know what is working and what is not

## Teaching assistants

<br>

- The teaching assistants for this course will be confirmed soon

- They will be answering questions during our lectures and holding office hours (see Canvas or the course website for office hours information)

- They will also be grading your assignments and quizzes (with my oversight)

- We are all here to help you! So feel free to ask questions during class, office hours, or via email `r emo::ji('smiling_face_with_smiling_eyes')`

## Office hours
### What for and what not for

<br>

- What office hours are meant for:
  - Applying tools in practice
  - Discussion of issues related to the assignments
  - Boosting your knowledge of data science

:::{.fragment .fade-in}
- What these sessions are [not]{.alert} meant for: 
    - Solving the assignments for you
    - Taking care of developing your coding skills
:::

## Class etiquette

:::: {.columns}
::: {.column width=70%}
- Coding can be tough and push you out of your comfort zone. If the course pace is too fast, let us know. I expect your commitment, but [I do not want anyone to fail]{.alert}
- You are all keen on data science, but your backgrounds vary. That is great! Some sessions might be more engaging than others. If you are bored, [help others]{.alert} or explore new data science areas
- [Always be respectful]{.alert} to each other
- [Ask questions]{.alert} whenever you need to!
:::

::: {.column width=30%}
![](figures/stupid-questions.jpg)
:::
::::

# Motivation: What is data science? `r emo::ji('man_technologist')` `r emo::ji('woman_technologist')` {background-color="#2d4563"}

## An old classic {transition="none"}

![](figures/venn-orig-1.png){ height=550px style="display: block; margin: auto;" }

## An old classic {transition="none"}

![](figures/venn-orig-2.png){ height=550px style="display: block; margin: auto;" }

## An old classic {transition="none"}

![](figures/venn-orig-3.png){ height=550px style="display: block; margin: auto;" }

## An old classic {transition="none"}

![](figures/venn-orig-4.png){ height=550px style="display: block; margin: auto;" }

## An old classic {transition="none"}

![](figures/venn-orig-5.png){ height=550px style="display: block; margin: auto;" }

## Rise of the digital information age

![](figures/digital.jpeg){ width=110% style="display: block; margin: auto;" }

## Social media data

![](figures/redes.png){ width=20% style="display: block; margin: auto;" }

## New data formats

:::: {.columns}
::: {.column width="50%"}
![](figures/tweets.png){ width=100% style="display: block; margin: auto;" }
:::

::: {.column width="50%"}
![](figures/imagescnn.png){ width=100% style="display: block; margin: auto;" }

![](figures/audio.png){ width=100% style="display: block; margin: auto;" }
:::
::::

## Survey data

![](figures/survey.png){ width=80% style="display: block; margin: auto;" }

## Cheap computing power

![](figures/collab.png){ width=80% style="display: block; margin: auto;" }

## As a consequence:

:::: {style="font-size: 30px;"}
::: {.incremental}
- Abundance of data available for research and for governments to make better decisions
  - Opportunities for novel research questions
  - New methods to answer longstanding research questions

- New technologies also have social implications and can raise important policy issues
  - Ethical concerns
  - Use of technology by malicious actors
  - Government use of technology to censor or monitor citizens
:::
::::

# Course overview and logistics `r emo::ji('open_book')` `r emo::ji('books')` `r emo::ji('computer')` {background-color="#2d4563"}

## Course objectives

<br>

:::: {.columns}
::: {.column width="50%"}
::: {style="font-size: 24px;"}
- Use data science tools for project collaboration and version control
- Apply advanced techniques for data storage, manipulation, and querying
- Create clear data visualisations and write well-documented code
- Use AI tools to help with programming tasks
- Understand the basics of containerisation and parallel computing
:::
:::

::: {.column width="50%"}
![](figures/dsc.jpg)
:::
::::

## Key focus areas
### Why reliability, reproducibility, and robustness matter

- This course centres around three key areas of the modern data science workflow: [reliability]{.alert}, [reproducibility]{.alert}, and [robustness]{.alert}

:::: {.columns}
::: {.column width="33%"}
::: {.fragment .fade-in}
::: {style="font-size: 24px;"}
- [Reliability]{.alert}:
  - Ensures consistency in results across multiple runs
  - Minimises errors in data processing and analysis
  - Supports accurate interpretation of findings
:::
:::
:::

::: {.column width="33%"}
::: {.fragment .fade-in}
::: {style="font-size: 24px;"}
- [Reproducibility]{.alert}:
  - Allows others to verify and build upon your work
  - Enhances the credibility of research outcomes
  - Facilitates long-term preservation of scientific knowledge
:::
:::
:::

::: {.column width="33%"}
::: {.fragment .fade-in}
::: {style="font-size: 24px;"}
- [Robustness]{.alert}:
  - Enables analyses to handle unexpected data variations
  - Improves the stability of results under different conditions
  - Supports the scalability of methods to larger datasets
:::
:::
:::
::::

## Key tools

- [Command line interfaces](https://en.wikipedia.org/wiki/Command-line_interface) and [vim](https://www.vim.org/) for precise control

::::{.columns}
::: {.column width="50%"}
![](figures/cli.png)
:::

::: {.column width="50%"}
![](figures/vim.png)
:::
::::

## Key tools

- [Git](https://git-scm.com/) and [GitHub](https://github.com) for version control, and [GitHub Copilot](https://copilot.github.com/) for code generation

:::: {.columns}
::: {.column width="33%"}
![](figures/git.png){width=80%}
:::

::: {.column width="33%"}
![](figures/github.png){width=80%}
:::

::: {.column width="33%"}
![](figures/github-copilot.png){width=60%}
:::
::::

## Key tools

- [SQL](https://www.w3schools.com/sql/) and [Pandas](https://pandas.pydata.org/) for robust data manipulation

::::{.columns}
::: {.column width="50%"}
![](figures/postgresql.webp)
:::

::: {.column width="50%"}
<br>
![](figures/pandas.png)
:::
::::

## Key tools

- [Matplotlib](https://matplotlib.org/), [Seaborn](https://seaborn.pydata.org/), and [plotnine](https://plotnine.readthedocs.io/) (if you want to!) for flexible visualisation

::::{.columns}
::: {.column width="33%"}
![](figures/matplotlib.png)
:::

::: {.column width="33%"}
![](figures/seaborn.png)
:::

::: {.column width="33%"}
![](figures/plotnine.png)
:::
::::

## Key tools

- [Docker](https://www.docker.com/) for consistent computational environments
- [Dask](https://dask.org/) for scalable and parallel computing

::::{.columns}
::: {.column width="50%"}
![](figures/docker.png)
:::

::: {.column width="50%"}
![](figures/dask.png)
:::
::::

## Logistics
### Course information

::: {style="font-size: 28px;"}
- **Syllabus**: Available on our [course repository](https://github.com/danilofreire/qtm350/blob/main/syllabus.pdf) and [website](https://danilofreire.github.io/qtm350/syllabus.html). The course is designed to be self-contained. The syllabus includes links to slides and Jupyter Notebooks we will use in class, along with recommended readings, and problem sets. I will upload slides throughout the term as we progress.
- **Schedule**: Lectures are on Mondays and Wednesdays from 2:30 to 3:45 pm
- **Office Hours**: I'm available to meet you at any time. [And I mean it.]{.alert} Please reach out a couple of days in advance and we can schedule a meeting

- **Materials**:
    - Course repository: <https://github.com/danilofreire/qtm350>
    - Canvas
:::

## Assignments
### How you will be graded

::: {style="margin-top: 40px;"}
:::

- **Problem sets**: Ten of them, due on Wednesdays at 11:59 pm (50%)
- **In-class quizzes**: Five of them (30%)
- **Final project**: Due on the last day of class (20%)
- **Late policy**: 10% off per day late
- **Collaboration**: You can discuss assignments with your classmates, but you must write your own code and submit your own work. AI is allowed.
- **Academic integrity**: Please refer to the syllabus for the university's policy on academic integrity

# Set up `r emo::ji('computer')` `r emo::ji('hammer_and_wrench')` {background-color="#2d4563"}

## Software

::: {style="margin-top: 40px;"}
:::

- **Git**: Version control system. Download it [here](https://git-scm.com/). Instructions for installation [here](https://git-scm.com/book/en/v2/Getting-Started-Installing-Git). Feel free to configure it if you wish (instructions [here](https://git-scm.com/book/en/v2/Getting-Started-First-Time-Git-Setup)), but we are going to talk about it in class.

- **GitHub**: Online platform for hosting code repositories. You will use it a lot, and not only for this class. Create an account on [GitHub](https://github.com/) and register for a student/educator [discount](https://education.github.com/discount_requests/new). 

- There is a series of tutorials available on our course website on how to set up Git and GitHub: <https://danilofreire.github.io/qtm350/tutorials/tutorials.html>

## OS extras

::: {style="margin-top: 40px;"}
:::

- **Windows:** Install [Bash for Windows](https://learn.microsoft.com/en-us/windows/wsl/install). Another good tutorial can be found [here](https://itsfoss.com/install-bash-on-windows/). You might also want to install [Chocolatey](https://chocolatey.org/) (they offer a free and open-source version)
- **Mac:** Install [Homebrew](https://brew.sh/) and [Oh My Zsh](https://ohmyz.sh/)
- **Linux:** None (you should be good to go)

## Other tools

::: {style="margin-top: 40px;"}
:::

- We will have time to install other tools during the course. But if you want to get ahead, you can install the following:
- **VS Code**: Code editor. Download it [here](https://code.visualstudio.com/)
- **Anaconda**: Python distribution. Download it [here](https://www.anaconda.com/products/distribution)
- **Docker**: Containerisation tool. Download it [here](https://www.docker.com/)
- **PostgreSQL**: Database management system. Download it [here](https://www.postgresql.org/)

::: {style="margin-top: 40px;"}
:::

- Tutorials for these tools are available on our course website: <https://danilofreire.github.io/qtm350/tutorials/tutorials.html>

## Next class

::: {style="font-size: 28px;"}
- We will cover computational literacy, including binary and hexadecimal numbers, and character encoding systems like ASCII and Unicode
- We will also discuss the early days of computing, focusing on Konrad Zuse's work with digital computers and binary arithmetic
- We will talk about the evolution of programming languages, from assembly to modern high-level languages like Python, and the differences between compiled and interpreted languages
- There will be time for questions about installing the terminal. You do not need it for next week, but consider installing it soon, as it will be necessary in two weeks. Please create a [GitHub educational account](https://education.github.com/discount_requests/new) if you do not have one `r emo::ji('winking_face')`


:::{.fragment .fade-in}
... **and that's all for today!** `r emo::ji('smiling_face_with_smiling_eyes')`
:::
:::

# Questions? {background-color="#2d4563"}

# Thank you very much for your attention and have a great day! `r emo::ji('smiling_face_with_smiling_eyes')` {background-color="#2d4563"}